<!DOCTYPE html>
<html>
<head>
  <link href="/stylesheets/programmer.css" rel="stylesheet">
  <script src="/socket.io/socket.io.js"></script>
  <script src="/jquery-2.1.3.js"></script>
  <script src="/bower_components/chance/chance.js"></script>
</head>
<body>
<div class="programmer-part">
  <div class="controls">
    <input type="hidden" id="playgroundid" value="{{playgroundid}}">
    <div>
      <input type="text" id="codeid"></input>
    </div>
    <textarea id="code" rows="20" cols="80"></textarea>
    <button id="bouton">go live!</button>
  </div>
  <ul id="objects"></ul>
  <div class="examples">
    <div class="example number-32">
    <script type="text/processing">
// See also : http://itunes.com/app/Number32

Creature c;

void setup() {
  noStroke();

  c = new Type1(int(random(255)), 0x55);
  c.position = new JVector(width/2,height/2);
}

void draw() {
  background(0,0);
  fill(0);

  c.think();

  c.draw();
}


static int rotl(int x, int n) {
  return ((x << n) | ((x >>> (8-n)) & 0xff)) & 0xff;
}


class JVector {
  public float x, y;

  JVector(float x, float y) {
    this.x = x;
    this.y = y;
  }

  void add(JVector v) {
    this.x += v.x;
    this.y += v.y;
  }

  void mult(float f) {
    this.x *= f;
    this.y *= f;
  }

  float mag() {
    return sqrt(this.x * this.x + this.y * this.y);
  }
}

class Creature {
  public int mwidth;
  public int mheight;
  public int[] bitmasks;
  public float skale;
  public float angle;
  public JVector position;
  public JVector speed;

  Creature(int mwidth, int mheight, int[] bitmasks) {
    this.skale = 10;

    this.mwidth = mwidth;
    this.mheight = mheight;

    this.angle = 0;

    this.position = new JVector(0, 0);

    this.speed = new JVector(0, 0);

    this.bitmasks = bitmasks;
  }

  void think() {
    if(this.speed.mag() < 0.1) {
      this.speed = new JVector(random(-10,10),random(-10,10));

      if((this.position.x < 150 &&  this.speed.x < 0)
        || (this.position.x > width - 150 && this.speed.x > 0)
        )
        this.speed.x *= -1;

      if((this.position.y < 150 && this.speed.y < 0)
        || (this.position.y > height - 150 && this.speed.y > 0)
        )
        this.speed.y *= -1;
    }

    this.position.add(this.speed);
    this.speed.mult(0.95);
    this.angle += 0.02 * this.speed.x;
  }

  void draw() {
    pushMatrix();
    translate(this.position.x, this.position.y);
    scale(this.skale);
    rotate(this.angle);
    for(int y=0; y<mheight; y++)
      for(int x=0; x<mwidth; x++) {
        int bits = this.bitmasks[y*mwidth + x];
        pushMatrix();
        translate(1 + 2*x - mwidth, 1 + 2*y - mheight);
        drawAtom(bits);
        popMatrix();
      }
    popMatrix();
  }
}

class Type1 extends Creature {
  Type1(int a, int b) {
    super(3, 3, new int[] {
      a,0,rotl(a,6), 0,b,0, rotl(a,2),0,rotl(a,4)
    }
    );
  }
}

void drawAtom(int bits) {
    if(0 != (bits & 1)) triangle(0.029289335,0.07071072,0.029289335,0.97071064,0.92928934,0.97071064);
    if(0 != (bits & 2)) triangle(0.07071072,0.029289335,0.97071064,0.92928934,0.97071064,0.029289335);
    if(0 != (bits & 4)) triangle(0.07071072,-0.029289335,0.97071064,-0.029289335,0.97071064,-0.92928934);
    if(0 != (bits & 8)) triangle(0.029289335,-0.07071072,0.92928934,-0.97071064,0.029289335,-0.97071064);
    if(0 != (bits & 16)) triangle(-0.029289335,-0.07071072,-0.029289335,-0.97071064,-0.92928934,-0.97071064);
    if(0 != (bits & 32)) triangle(-0.07071072,-0.029289335,-0.97071064,-0.92928934,-0.97071064,-0.029289335);
    if(0 != (bits & 64)) triangle(-0.07071072,0.029289335,-0.97071064,0.029289335,-0.97071064,0.92928934);
    if(0 != (bits & 128)) triangle(-0.029289335,0.07071072,-0.92928934,0.97071064,-0.029289335,0.97071064);
}
    </script>
    </div>
    <div class="example eye">
    <script type="text/processing">
void draw() {
  background(0,0);

  translate(200 + 100 * Math.cos(millis()/800), 200 + 100 * Math.sin(millis() / 750))

  fill(200, 80, 80)
  ellipse(0,0,120,120)

  fill(60, 60, 123)
  ellipse(0,0,100,100)

  fill(130, 130, 140)
  ellipse(0,0,70,70)

  fill(0, 220, 120)
  ellipse(0,0,40,40)
}
    </script>
    </div>
      <div class="example serpent">
    <script type="text/processing">
class Creature {
  PVector loc;
  PVector vel;
  PVector acc; 
  float topspeed;
  int rad;
  boolean once;
  ArrayList serpent = new ArrayList();
  int maxSerpent = 10;
  float noiseSeed = 0.1;

  Creature() {
    loc = new PVector(random(width), random(height));
    vel = new PVector();
    //acc = new PVector(-0.001, 0.01);
    topspeed = 5;
    rad = 10;
  }

  void avance(String move, float v) { //UPDATE
    if (!once) {
      vel = new PVector(random(-v, v), random(-v, v));
      once = true;
    }

    if (move == "toutdroit") {
      //acc.normalize();
    } else if (move == "serpent") {
      acc = new PVector(noise(frameCount*noiseSeed)*width, noise(1+frameCount*noiseSeed)*height);
      acc.normalize();
      vel.add(acc);
    } else if (move == "touslessens") {
      acc = new PVector(random(-1, 1), random(-1, 1));
      acc.normalize();
      vel.add(acc);
    }


    vel.limit(v);
    loc.add(vel);

    serpent.add(new PVector(loc.x, loc.y));
    if (serpent.size() > maxSerpent) {
      serpent.remove(0);
    }

  } 

  void alaforme(String forme) { //DISPLAY
    if (forme == "boule") {
      ellipse(loc.x, loc.y, rad, rad);
    } else if (forme == "carre") {
      rect(loc.x, loc.y, rad, rad);
    } else if (forme == "serpent") {
      beginShape();
      for (int i = 0; i <= serpent.size()-1; i++) {
        PVector a = (PVector) serpent.get(i);
        curveVertex(a.x, a.y);
      }
      endShape();
    } else if (forme == "pieuvre") {
    }
  }

  void teletransporte() {

    if (loc.x > width) {
      loc.x = 0;
    } else if (loc.x < 0) {
      loc.x = width;
    }

    if (loc.y > height) {
      loc.y = 0;
    } else if (loc.y < 0) {
      loc.y = height;
    }
  }

  void rebondis() {
    if ((loc.x > width) || (loc.x < 0)) {
      if (loc.x > width) { 
        loc.x = width;
      } else if (loc.x < 0) { 
        loc.x = 0;
      }
      vel.x = vel.x * -1;
    }
    if ((loc.y > height) || (loc.y < 0)) {
      if (loc.y > height) { 
        loc.y = height;
      } else if (loc.y < 0) { 
        loc.y = 0;
      }
      vel.y = vel.y * -1;
    }
  }
}

Creature maCreature;

void setup() {
  background(255, 255, 255,0);
  stroke(0);
  strokeWeight(4);

  rectMode(CENTER);

  maCreature = new Creature();
 
}

void draw() {

  background(255, 255, 255, 0);
  maCreature.alaforme("serpent");
  maCreature.avance("touslessens", 10);
  maCreature.rebondis();
}
    </script>
    </div>
  </div>
</div>
<div>
  <a href="#" id="previewonoff">preview on/off</a> 
  <a href="/playground/{{playgroundid}}" target="_blank" id="openinnewwindow">open {{playgroundid}} in new window &#x279a;</a>
</div>
<div class="viewer-part" id="viewercontainer">
  <iframe class="viewer" id="viewerframe" src="/playground/{{playgroundid}}"></iframe>
</div>
<script src="/programmer.js"></script>
</body>
</html>
